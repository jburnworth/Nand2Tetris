// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Computes the sum of three bits.
 */

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    /*
    Using Multiplexer and dividing in half based on input a.
    
    Xor(a=b, b=c, out=lowSum);
    And(a=b, b=c, out=lowCarry);

    Xor(a=b, b=c, out=notHighSum);
    Not(in=notHighSum, out=highSum);
    Or(a=b, b=c, out=highCarry);

    Mux(a=lowSum, b=highSum, sel=a, out=sum);
    Mux(a=lowCarry, b=highCarry, sel=a, out=carry);
    */

    /* This is a more 'addition' based approach */
    Xor(a=b, b=c, out=bcSum);
    Xor(a=bcSum, b=a, out=sum);

    And(a=b, b=c, out=abCarry);
    And(a=bcSum, b=a, out=sumCarry);
    Or(a=abCarry, b=sumCarry, out=carry);
}
